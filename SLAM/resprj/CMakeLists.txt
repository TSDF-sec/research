# Empyt Project Template
# Xiang GAO, 2014.2

# Version required
CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

# Project Name
PROJECT( resprj )

# Basic Settings
SET(CMAKE_CXX_COMPILER "g++")
SET(CMAKE_CXX_FLAGS "")
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

# Debug Settings
SET( CMAKE_BUILD_TYPE Debug )

FIND_PACKAGE(PCL 1.7 REQUIRED )
INCLUDE_DIRECTORIES(${PCL_INCLUDE_DIRS})
LINK_DIRECTORIES(${PCL_LIBRARY_DIRS})
ADD_DEFINITIONS(${PCL_DEFINITIONS})

# Include directories
INCLUDE_DIRECTORIES( ${PROJECT_SOURCE_DIR}/include )

# Library directories
LINK_DIRECTORIES( ${PROJECT_SOURCE_DIR}/lib )

# Source directories
ADD_SUBDIRECTORY( ${PROJECT_SOURCE_DIR}/src )

# Add new CMake Modules
LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)

FIND_PACKAGE( OpenCV REQUIRED )

SET(G2O_ROOT "/usr/local/include/g2o")

FIND_PACKAGE(G2O)
IF(G2O_FOUND)

ELSE(G2O_FOUND)
  MESSAGE(FATAL_ERROR "g2o not FOUND.")
ENDIF(G2O_FOUND)

# CSparse
FIND_PACKAGE(CSparse)
IF(CSPARSE_FOUND)
  SET(BUILD_CSPARSE OFF CACHE BOOL "Build local CSparse library")
ELSE(CSPARSE_FOUND)
  SET(BUILD_CSPARSE ON CACHE BOOL "Build local CSparse library")
  IF(BUILD_CSPARSE)
    SET(CSPARSE_FOUND TRUE)
  ENDIF()
ENDIF(CSPARSE_FOUND)

ADD_DEFINITIONS(${PCL_DEFINITIONS})
ADD_DEFINITIONS(-Wno-deprecated -DEIGEN_DONT_VECTORIZE -DEIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT)
